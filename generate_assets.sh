#!/bin/bash

# Flutter Asset Generator
# Version: 2.2.0 (Robust Naming)
# Generates a Dart class for assets with type-safe access.

# --- Configuration ---
ASSETS_DIR="assets"
OUTPUT_FILE="lib/constants/app_assets.dart"
CLASS_NAME="AppAssets"

# --- Script Start ---
mkdir -p "$(dirname "$OUTPUT_FILE")"

# Header
{
  echo "// This file is generated by a script. Do not edit."
  echo "// Generated at: $(date)"
  echo ""
  echo "class $CLASS_NAME {"
  echo "  const $CLASS_NAME._();"
  echo ""
} > "$OUTPUT_FILE"

# Process each top-level directory in assets (except fonts)
find "$ASSETS_DIR" -maxdepth 1 -mindepth 1 -type d | sort | while IFS= read -r dir; do
    folder_name=$(basename "$dir")
    if [[ "$folder_name" == "fonts" ]]; then
        continue
    fi

    # Section comment
    section_name_capitalized="$(tr '[:lower:]' '[:upper:]' <<< ${folder_name:0:1})${folder_name:1}"
    echo "  // === $section_name_capitalized ===" >> "$OUTPUT_FILE"

    # Process files, grouped and sorted by extension
    find "$dir" -type f | sort -t. -k2 | while IFS= read -r file; do
        ext="${file##*.}"

        # --- Generate a clean, camelCase variable name ---
        # 1. Get path relative to assets dir, without extension.
        var_name_base=$(echo "$file" | sed -e "s#^$ASSETS_DIR/##" -e "s#\.$ext##")

        # 2. (NEW ROBUST METHOD) Sanitize using 'tr' to replace all non-alphanumeric
        #    characters with spaces. This is more portable than complex 'sed' regex.
        sanitized_string=$(echo "$var_name_base" | tr '[:upper:]' '[:lower:]' | tr -c 'a-zA-Z0-9' ' ')

        # 3. Use the shell's word-splitting to join parts with underscores.
        var_name_snake=$(echo $sanitized_string | tr ' ' '_')
        
        # 4. Convert snake_case to lowerCamelCase using awk.
        var_name_camel=$(echo "$var_name_snake" | awk -F_ '{printf "%s", $1; for(i=2; i<=NF; i++) printf "%s", toupper(substr($i,1,1)) substr($i,2)}')
        
        # 5. Handle names that start with a number.
        if [[ $var_name_camel =~ ^[0-9] ]]; then
            var_name_camel="asset$var_name_camel"
        fi

        # 6. Final check: if name is empty, print a warning and skip.
        if [[ -z "$var_name_camel" ]]; then
            echo "  // WARNING: Could not generate a valid name for asset: $file" >> "$OUTPUT_FILE"
            continue
        fi

        # Write the final Dart code line.
        echo "  static const String $var_name_camel = '$file';" >> "$OUTPUT_FILE"
    done
    echo "" >> "$OUTPUT_FILE"
done

# Closing brace
echo "}" >> "$OUTPUT_FILE"
